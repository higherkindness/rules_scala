#!/bin/bash -e

# TODO(Andy Scott): Reenable this test after fixing coverage in Bazel 25
#
#
# . "$(dirname "$0")"/../common.sh

# bazel_bin=$(bazel info bazel-bin)

# rm -rf "$bazel_bin/coverage/"

# bazel test :test-all

# if [ -f "$bazel_bin/coverage/a1-offline.jar" ]; then
#     echo "a1-offline.jar shouldn't exist yet"
#     exit 1
# fi

# bazel coverage \
#       --instrumentation_filter=.* \
#       --instrument_test_targets \
#       :all

# # in theory, these should work to build a combined report:
# #--coverage_report_generator="@bazel_tools//tools/test/CoverageOutputGenerator/java/com/google/devtools/coverageoutputgenerator:Main"
# #--combined_report=lcov \

# if [ ! -f "$bazel_bin/coverage/a1-offline.jar" ]; then
#     echo "a1-offline.jar expected"
#     exit 1
# fi


# diff expected-test-all-coverage.dat $(bazel info bazel-testlogs)/coverage/test-all/coverage.dat
# diff expected-test-b2-coverage.dat $(bazel info bazel-testlogs)/coverage/test-b2/coverage.dat

# exit 0

# #
# # fun extras for generating HTML reports
# #

# set +e
# rm -r test-all-report/*
# set -e
# cat ../bazel-testlogs/coverage/test-all/coverage.dat | sed -e s/SF:\\//SF:/ > test-all-coverage.dat
# genhtml -o test-all-report test-all-coverage.dat
# rm test-all-coverage.dat

# set +e
# rm -r test-b2-report/*
# set -e
# cat ../bazel-testlogs/coverage/test-b2/coverage.dat | sed -e s/SF:\\//SF:/ > test-b2-coverage.dat
# genhtml -o test-b2-report test-b2-coverage.dat
# rm test-b2-coverage.dat
